(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{199:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器","aria-hidden":"true"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),a("h2",{attrs:{id:"跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域","aria-hidden":"true"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),a("p",[t._v("出于安全考虑，有"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的同源策略"),a("OutboundLink")],1),t._v("，简单讲是浏览器为了防止以下情况的发生：")]),t._v(" "),a("p",[t._v("你登录了某网站A，服务端判定登录成功后在响应头加入了 "),a("code",[t._v("Set-Cookie")]),t._v(" 字段，下次发送请求时浏览器会自动将 "),a("strong",[t._v("cookie")]),t._v(" 附加到请求的头字段 "),a("code",[t._v("Cookie")]),t._v(" 中，如果这时候你访问了网站B且网站B向A发送请求，由于没有同源策略的限制，网站B就相当于登录了你网站A的账号。")]),t._v(" "),a("h3",{attrs:{id:"jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonp","aria-hidden":"true"}},[t._v("#")]),t._v(" JSONP")]),t._v(" "),a("p",[t._v("利用 "),a("code",[t._v("script")]),t._v(" 标签没有跨域限制，通过它指向请求的地址并且提供回调函数接收数据：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://domain/api?param1=a&param2=b&callback=jsonp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("JSONP 优点是是兼容性好，缺点是只能发送 "),a("code",[t._v("GET")]),t._v(" 请求")]),t._v(" "),a("h3",{attrs:{id:"cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors","aria-hidden":"true"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),a("p",[t._v("服务端设置 "),a("code",[t._v("Access-Control-Allow-Origin")])]),t._v(" "),a("h3",{attrs:{id:"代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 代理")]),t._v(" "),a("p",[t._v("发送请求还是使用前端地址，然后通过代理把请求转发至需要的后端地址上。通常使用 Nginx 转发")]),t._v(" "),a("h3",{attrs:{id:"document-domain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#document-domain","aria-hidden":"true"}},[t._v("#")]),t._v(" document.domain")]),t._v(" "),a("p",[t._v("该方式只能用于二级域名相同的情况下，比如 "),a("em",[t._v("a.test.com")]),t._v(" 和 "),a("em",[t._v("b.test.com")]),t._v(" 适用于该方式。\n只需要给页面添加 "),a("code",[t._v("document.domain = 'test.com'")]),t._v(" 表示二级域名都相同就可以实现跨域")]),t._v(" "),a("h3",{attrs:{id:"postmessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postmessage","aria-hidden":"true"}},[t._v("#")]),t._v(" postMessage")]),t._v(" "),a("p",[t._v("这种方式通常用于获取嵌入页面中的第三方页面数据。一个页面发送消息，另一个页面判断来源并接收消息")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息端")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://test.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收消息端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originalEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("origin\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://test.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'验证通过'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"javascript-运行机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-运行机制","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript 运行机制")]),t._v(" "),a("h3",{attrs:{id:"进程与线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程","aria-hidden":"true"}},[t._v("#")]),t._v(" 进程与线程")]),t._v(" "),a("p",[t._v("在浏览器中，打开一个 Tab 页就创建了一个新的进程，每个进程内可以存在多个线程（同一时间只能做一件事）：渲染线程、JS 引擎线程、HTTP 请求线程等。发起一个 HTTP 请求实际上会创建一个线程，请求结束后这个线程可能被销毁。")]),t._v(" "),a("p",[t._v("JS 运行可能阻止渲染，因为这两个线程"),a("strong",[t._v("互斥")]),t._v("，互斥的原因是 JS 可能会操作 DOM，这可能会使得渲染出现问题。")]),t._v(" "),a("blockquote",[a("p",[t._v("为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。")])]),t._v(" "),a("h3",{attrs:{id:"任务队列-task-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务队列-task-queue","aria-hidden":"true"}},[t._v("#")]),t._v(" 任务队列(task queue)")]),t._v(" "),a("p",[t._v("单线程意味着所有任务都要排队执行，但是遇到 "),a("code",[t._v("AJAX")]),t._v(" "),a("code",[t._v("setTimeout")]),t._v(" 等异步操作时我们肯定不能等待它执行完再执行其他任务。")]),t._v(" "),a("p",[t._v("于是任务分成了 同步任务 和 异步任务。")]),t._v(" "),a("blockquote",[a("p",[t._v("同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；")]),t._v(" "),a("p",[t._v('异步任务指的是，不进入主线程、而进入"任务队列"（task queue）的任务，只有"任务队列"通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。')])]),t._v(" "),a("p",[t._v("所以 JS 运行的机制变成了：")]),t._v(" "),a("ol",[a("li",[t._v("同步任务在主线程上执行，形成执行栈。")]),t._v(" "),a("li",[t._v("执行栈之外存在一个任务队列，异步任务有了结果以后会在任务队列中放置一个事件。")]),t._v(" "),a("li",[t._v("执行栈同步任务执行完毕后会读取任务队列，根据事件对应异步任务，异步任务结束等待进入主线程执行。")]),t._v(" "),a("li",[t._v("主线程不断重复上面步骤。")])]),t._v(" "),a("p",[t._v("换个角度讲，一些事件（鼠标点击、页面滚动等）发生时，都会进入任务队列，可以认为这些事件就是异步任务。")]),t._v(" "),a("h2",{attrs:{id:"event-loop-事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-事件循环","aria-hidden":"true"}},[t._v("#")]),t._v(" Event loop (事件循环)")]),t._v(" "),a("p",[t._v("JS引擎是单线程的，在某一个特定的时间内只能执行一个任务，并阻塞其他任务的执行。这样的话，用户不得不等待一个耗时的操作完成之后才能进行后面的操作，但是实际开发中我们却可以使用异步代码来解决问题，那么异步代码是如何在单线程内运行的呢？")]),t._v(" "),a("p",[t._v("当异步方法如 "),a("code",[t._v("setTimeout")]),t._v(" 或 "),a("code",[t._v("ajax")]),t._v(" 执行时，会交给浏览器内核的其他模块去管理。当其他模块执行完毕时将方法推入到一个任务队列(task queue)，当主线程代码执行完毕处于空闲时会检查任务队列，将任务队列中第一个任务入栈执行，执行完毕后继续检查任务队列，如此循环。")]),t._v(" "),a("p",[t._v("看以下代码")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script start'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script end'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("虽然 "),a("code",[t._v("setTimeout")]),t._v(" 延时为 0，但由以上内容我们可知 "),a("code",[t._v("setTimeout")]),t._v(" 还是会在 "),a("code",[t._v("script end")]),t._v(" 之后打印。")]),t._v(" "),a("h3",{attrs:{id:"微任务-microtask-和-宏任务-macrotask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微任务-microtask-和-宏任务-macrotask","aria-hidden":"true"}},[t._v("#")]),t._v(" 微任务(microtask) 和 宏任务(macrotask)")]),t._v(" "),a("p",[t._v("在 ES6 规范中，"),a("strong",[t._v("microtask")]),t._v(" 称为 "),a("strong",[t._v("jobs")]),t._v("，"),a("strong",[t._v("macrotask")]),t._v(" 称为 "),a("strong",[t._v("task")]),t._v("。\n微任务(microtask):")]),t._v(" "),a("ul",[a("li",[t._v("process.nextTick")]),t._v(" "),a("li",[t._v("promise")]),t._v(" "),a("li",[t._v("Object.observe")]),t._v(" "),a("li",[t._v("MutationObserver")])]),t._v(" "),a("p",[t._v("宏任务(macrotask):")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("script")])]),t._v(" "),a("li",[a("p",[t._v("setTimeout")])]),t._v(" "),a("li",[a("p",[t._v("setInterval")])]),t._v(" "),a("li",[a("p",[t._v("setImmediate")])]),t._v(" "),a("li",[a("p",[t._v("I/O")])]),t._v(" "),a("li",[a("p",[t._v("UI rendering")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("宏任务")]),t._v("是每次"),a("strong",[t._v("执行栈")]),t._v("执行的代码（包括每次从事件队列中获取一个事件回调并放到执行栈中执行）")])]),t._v(" "),a("li",[a("p",[t._v("浏览器为了能够使得"),a("strong",[t._v("JS引擎线程")]),t._v("与"),a("strong",[t._v("GUI渲染线程")]),t._v("有序切换，会在当前"),a("strong",[t._v("宏任务")]),t._v("结束之后，下一个"),a("strong",[t._v("宏任务")]),t._v("执行开始之前，对页面进行重新渲染（宏任务 > 渲染  > 宏任务 > ...）")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("微任务")]),t._v("是在当前"),a("strong",[t._v("宏任务")]),t._v("执行结束之后立即执行的任务（在当前"),a("strong",[t._v("宏任务")]),t._v("执行之后，UI渲染之前执行的任务）。"),a("strong",[t._v("微任务")]),t._v("的响应速度相比"),a("code",[t._v("setTimeout")]),t._v("（下一个"),a("strong",[t._v("宏任务")]),t._v("）会更快，因为无需等待UI渲染。")])]),t._v(" "),a("li",[a("p",[t._v("当前"),a("strong",[t._v("宏任务")]),t._v("执行后，会将在它执行期间产生的所有"),a("strong",[t._v("微任务")]),t._v("都执行一遍。")])])]),t._v(" "),a("h3",{attrs:{id:"event-loop-顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" Event loop 顺序")]),t._v(" "),a("ol",[a("li",[t._v("执行一个宏任务（script）")]),t._v(" "),a("li",[t._v("执行过程中如果遇到微任务，就将它添加到微任务的任务队列中")]),t._v(" "),a("li",[t._v("宏任务执行完毕后，立即执行当前微任务队列中的所有任务（依次执行）")]),t._v(" "),a("li",[t._v("JS引擎线程挂起，GUI线程执行渲染")]),t._v(" "),a("li",[t._v("GUI线程渲染完毕后挂起，JS引擎线程执行任务队列中的下一个宏任务")])]),t._v(" "),a("blockquote",[a("p",[t._v("简单点记，微任务是早于除去 "),a("code",[t._v("script")]),t._v(" 的宏任务执行的。")]),t._v(" "),a("p",[t._v("script => 微任务 => 其余宏任务")])])])}),[],!1,null,null,null);s.default=e.exports}}]);