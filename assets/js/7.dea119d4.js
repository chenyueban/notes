(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{200:function(e,a,s){"use strict";s.r(a);var t=s(0),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"others"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#others","aria-hidden":"true"}},[e._v("#")]),e._v(" Others")]),e._v(" "),s("h2",{attrs:{id:"vuepress-travis-实现自动部署踩坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuepress-travis-实现自动部署踩坑","aria-hidden":"true"}},[e._v("#")]),e._v(" Vuepress + Travis 实现自动部署踩坑")]),e._v(" "),s("p",[s("code",[e._v("vuepress")]),e._v(" 官方推荐的创建一个 "),s("code",[e._v("deploy.sh")]),e._v(" 来实现部署，此操作在集成 "),s("code",[e._v("travis")]),e._v(" 时完全可以省略(别问我为什么知道)")]),e._v(" "),s("h3",{attrs:{id:"生成-personal-access-tokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成-personal-access-tokens","aria-hidden":"true"}},[e._v("#")]),e._v(" 生成 Personal access tokens")]),e._v(" "),s("ul",[s("li",[e._v("登录 github,点击右上角头像")]),e._v(" "),s("li",[e._v("Settings / Developer settings / Personal access tokens")]),e._v(" "),s("li",[e._v("Generate new token (全选)")])]),e._v(" "),s("h3",{attrs:{id:"environment-variables-设置-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables-设置-token","aria-hidden":"true"}},[e._v("#")]),e._v(" Environment Variables 设置 token")]),e._v(" "),s("ul",[s("li",[e._v("进入要设置的项目")]),e._v(" "),s("li",[e._v("More options / Settings")]),e._v(" "),s("li",[e._v("Environment Variables 内新添 "),s("code",[e._v("GITHUB_TOKEN")]),e._v(" (value 为上一步 github 生成的 token)")])]),e._v(" "),s("h3",{attrs:{id:"travis-yml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#travis-yml","aria-hidden":"true"}},[e._v("#")]),e._v(" .travis.yml")]),e._v(" "),s("ul",[s("li",[e._v("项目根目录新建 "),s("code",[e._v(".travis.yml")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('language: node_js\nsudo: required\nnode_js:\n  - "lts/*"\ninstall:\n  - npm install -g vuepress\nscript:\n  - vuepress build docs && cd docs/.vuepress/dist\ndeploy:\n  provider: pages\n  skip-cleanup: true\n  github-token: $GITHUB_TOKEN\n  on:\n    branch: master\n  local-dir: docs/.vuepress/dist\n')])])]),s("p",[e._v("最后 push 代码到 github, travis 就会检测到 push 请求，实现自动部署到 "),s("code",[e._v("gh-pages")]),e._v(" 分支")]),e._v(" "),s("h2",{attrs:{id:"jest-codecov-集成踩坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jest-codecov-集成踩坑","aria-hidden":"true"}},[e._v("#")]),e._v(" jest codecov 集成踩坑")]),e._v(" "),s("p",[e._v("codecov 是一个开源的统计单元测试覆盖率的工具, 可通过 "),s("code",[e._v("travis")]),e._v(" 自动部署时上传覆盖率.")]),e._v(" "),s("p",[e._v("本例结合 jest 集成 codecov")]),e._v(" "),s("p",[e._v("首先安装 codecov")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" --dev codecov\n")])])]),s("p",[e._v("然后 "),s("code",[e._v("package.json")]),e._v(" "),s("code",[e._v("scripts")]),e._v(" 加入:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"codecov"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"codecov"')]),e._v("\n")])])]),s("p",[e._v("最后在 "),s("code",[e._v("package.json")]),e._v(" "),s("code",[e._v("jest")]),e._v(" 或者 "),s("code",[e._v("jest.config.js")]),e._v(" 内加入配置项:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("coverageDirectory: './coverage/',\ncollectCoverage: true,\n")])])]),s("p",[e._v("注: codecov 将在根目录下生成目录 coverage, 可通过 "),s("code",[e._v(".gitignore")]),e._v(" 配置忽略.")]),e._v(" "),s("p",[e._v("本地文件的操作就这些, 之后去到 "),s("a",{attrs:{href:"https://codecov.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("codecov.io"),s("OutboundLink")],1),e._v(", 登录后进入目标项目, 复制 "),s("code",[e._v("Token")])]),e._v(" "),s("p",[e._v("然后去到 travis 对应项目 "),s("code",[e._v("Environment Variables")]),e._v(" 内新添 "),s("code",[e._v("CODECOV_TOKEN")])]),e._v(" "),s("p",[e._v("ok, 以后 "),s("code",[e._v("git push")]),e._v(" 就会自动\b跑 codecov 啦~")]),e._v(" "),s("h2",{attrs:{id:"commitizen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitizen","aria-hidden":"true"}},[e._v("#")]),e._v(" Commitizen")]),e._v(" "),s("p",[e._v("能够根据提示自动生成符合规范的 "),s("code",[e._v("commit message")])]),e._v(" "),s("p",[e._v("安装")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" global "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" commitizen\n")])])]),s("p",[e._v("在项目中使用")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("commitizen init cz-conventional-changelog --save --save-exact\n")])])]),s("p",[e._v("在提交的时候就可以使用 "),s("code",[e._v("git cz")]),e._v(" 就可以根据提示，生成自动化的 "),s("code",[e._v("commit message")])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/10/27/166b47239dd94158?imageslim",alt:"commit"}})]),e._v(" "),s("h2",{attrs:{id:"生成-change-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成-change-log","aria-hidden":"true"}},[e._v("#")]),e._v(" 生成 Change log")]),e._v(" "),s("blockquote",[s("p",[e._v("如果你的所有 Commit 都符合 Angular 格式，那么发布新版本时， Change log 就可以用脚本自动生成")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" global "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" conventional-changelog-cli\n\nconventional-changelog -p angular -i CHANGELOG.md -s -r "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n")])])]),s("blockquote",[s("p",[e._v("为了方便使用，可以将其写入package.json的scripts字段。")])]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"conventional-changelog -p angular -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"https://juejin.im/post/5bd2debfe51d457abc710b57",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考2"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);